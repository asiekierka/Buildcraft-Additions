package buildcraftAdditions.config;

import java.io.File;
import java.util.HashMap;
import java.util.HashSet;

import net.minecraftforge.common.config.Configuration;

import buildcraftAdditions.core.VersionCheck;

/**
 * Copyright (c) 2014, AEnterprise
 * http://buildcraftadditions.wordpress.com/
 * Buildcraft Additions is distributed under the terms of GNU GPL v3.0
 * Please check the contents of the license located in
 * http://buildcraftadditions.wordpress.com/wiki/licensing-stuff/
 */
public class ConfigurationHandler {
	public static Configuration configFile;
	public static boolean shouldPrintChangelog, shouldRegisterDusts, powerloss, eurekaIntegration;
	public static int[] powerDifficultyModifiers = new int[4];
	public static int basePowerModifier, entityHitModifier, hoeCost, KEB1powerloss, KEB2powerloss, KEB3powerloss, heatedFurnaceHeatRequired, basicCoilHeat, lavaCoilHeat, kineticCoilHeatModifier, portableLaserPowerUse, portableLaserLaserPower, portableLaserEntityBurnTime;
	public static float portableLaserEntityDamage, toolEfficiencyPickaxe, toolEfficiencyShovel, toolEfficiencyAxe;

	private static final HashSet<String> enabledFeatures = new HashSet<String>();

	public static boolean enabled(String name) {
		return enabledFeatures.contains(name);
	}

	private static void registerFeature(String name) {
		if (configFile.get("Feature", name, true).getBoolean()) {
			enabledFeatures.add(name);
		}
	}

	public static void init(File file) {
		configFile = new Configuration(file);
		readConfig();
	}

	public static void readConfig() {
		configFile.addCustomCategoryComment("Updates", "Section about updates");
		if (configFile.get("Updates", "shouldCheckForUpdates", true).getBoolean())
			VersionCheck.start();
		shouldPrintChangelog = configFile.get("Updates", "shouldPrintOutChangelog", false).getBoolean();

		configFile.addCustomCategoryComment("Power Usage", "Modify how much energy the multi-tool uses");
		powerDifficultyModifiers[0] = configFile.get("Power Usage", "PeacefulDifficultyModifier", 1).setMinValue(0).getInt();
		powerDifficultyModifiers[1] = configFile.get("Power Usage", "EasyDifficultyModifier", 2).setMinValue(0).getInt();
		powerDifficultyModifiers[2] = configFile.get("Power Usage", "NormalDifficultyModifier", 3).setMinValue(0).getInt();
		powerDifficultyModifiers[3] = configFile.get("Power Usage", "HardDifficultyModifier", 4).setMinValue(0).getInt();
		basePowerModifier = configFile.get("Power Usage", "BaseModifier", 10).setMinValue(0).getInt();
		entityHitModifier = configFile.get("Power Usage", "EntityHitModifier", 10).setMinValue(0).getInt();
		hoeCost = configFile.get("Power Usage", "HoeCost", 5).setMinValue(0).getInt();
		toolEfficiencyPickaxe = (float) configFile.get("Power Usage", "ToolEfficiencyPickaxe", 40D).setMinValue(1.1).setMaxValue(Float.MAX_VALUE).getDouble();
		toolEfficiencyShovel = (float) configFile.get("Power Usage", "ToolEfficiencyShovel", 10D).setMinValue(1.1).setMaxValue(Float.MAX_VALUE).getDouble();
		toolEfficiencyAxe = (float) configFile.get("Power Usage", "ToolEfficiencyAxe", 30D).setMinValue(1.1).setMaxValue(Float.MAX_VALUE).getDouble();

		configFile.addCustomCategoryComment("KEB", "Configuration stuff for your Kinetic Energy Buffers");
		powerloss = configFile.get("KEB", "powerloss", false).getBoolean();
		KEB1powerloss = configFile.get("KEB", "KEB1powerloss", 10).setMinValue(0).getInt();
		KEB2powerloss = configFile.get("KEB", "KEBT2powerloss", 5).setMinValue(0).getInt();
		KEB3powerloss = configFile.get("KEB", "KEBT3powerloss", 3).setMinValue(0).getInt();

		configFile.addCustomCategoryComment("Heated Furnace", "Everything you might want to change about your heated furnace");
		heatedFurnaceHeatRequired = configFile.get("Heated Furnace", "heatedFurnaceHeatRequired", 6500, "How much heat the furnace needs to receive to process one item").setMinValue(0).getInt();
		basicCoilHeat = configFile.get("Heated Furnace", "basicCoilHeat", 16, "Amount of heat a basic coil can generate each tick").setMinValue(0).getInt();
		lavaCoilHeat = configFile.get("Heated Furnace", "lavaCoilHeat", 32, "Amount of heat generated by a lava coil each tick").setMinValue(0).getInt();
		kineticCoilHeatModifier = configFile.get("Heated Furnace", "kineticCoilHeatModifier", 15, "The amount of heat a kinetic coil generates is the amount of RF it received during the last tick multiplied with this number").setMinValue(0).getInt();

		configFile.addCustomCategoryComment("Portable Laser", "Configuration stuff for your Portable Lasers");
		portableLaserPowerUse = configFile.get("Portable Laser", "PortableLaserPowerUse", 40).setMinValue(0).getInt();
		portableLaserLaserPower = configFile.get("Portable Laser", "PortableLaserLaserPower", 40).setMinValue(0).getInt();
		portableLaserEntityDamage = (float) configFile.get("Portable Laser", "PortableLaserEntityDamage", 4D).setMinValue(0).setMaxValue(Float.MAX_VALUE).getDouble();
		portableLaserEntityBurnTime = configFile.get("Portable Laser", "PortableLaserEntityBurnTime", 4).setMinValue(0).getInt();

		configFile.addCustomCategoryComment("Misc", "Stuff that didn't fit in any other category");
		shouldRegisterDusts = configFile.get("Misc", "shouldRegisterDusts", true).setRequiresMcRestart(true).getBoolean();
		eurekaIntegration = configFile.get("Misc", "eurekaIntegration", true).setRequiresMcRestart(true).getBoolean();

		registerFeature("ChargingStation");
		registerFeature("ColorSorter");
		registerFeature("ColoringTool");
		registerFeature("Duster");
		registerFeature("FluidCanisters");
		registerFeature("KineticBackpack");
		registerFeature("KineticEnergyBuffer");
		registerFeature("MachineUpgrades");
		registerFeature("MultiBlockRefining");
		registerFeature("MultiTools");
		registerFeature("MultiToolsArea");
		registerFeature("MultiToolsFortune");
		registerFeature("MultiToolsSilky");
		registerFeature("PortableLaser");
		registerFeature("PowerCapsules");

		if (configFile.hasChanged())
			configFile.save();
	}
}
